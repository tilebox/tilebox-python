# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from tilebox.workflows.workflowsv1 import core_pb2 as workflows_dot_v1_dot_core__pb2
from tilebox.workflows.workflowsv1 import diagram_pb2 as workflows_dot_v1_dot_diagram__pb2
from tilebox.workflows.workflowsv1 import job_pb2 as workflows_dot_v1_dot_job__pb2


class JobServiceStub(object):
    """A service for interacting with jobs.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubmitJob = channel.unary_unary(
                '/workflows.v1.JobService/SubmitJob',
                request_serializer=workflows_dot_v1_dot_job__pb2.SubmitJobRequest.SerializeToString,
                response_deserializer=workflows_dot_v1_dot_core__pb2.Job.FromString,
                _registered_method=True)
        self.GetJob = channel.unary_unary(
                '/workflows.v1.JobService/GetJob',
                request_serializer=workflows_dot_v1_dot_job__pb2.GetJobRequest.SerializeToString,
                response_deserializer=workflows_dot_v1_dot_core__pb2.Job.FromString,
                _registered_method=True)
        self.RetryJob = channel.unary_unary(
                '/workflows.v1.JobService/RetryJob',
                request_serializer=workflows_dot_v1_dot_job__pb2.RetryJobRequest.SerializeToString,
                response_deserializer=workflows_dot_v1_dot_job__pb2.RetryJobResponse.FromString,
                _registered_method=True)
        self.CancelJob = channel.unary_unary(
                '/workflows.v1.JobService/CancelJob',
                request_serializer=workflows_dot_v1_dot_job__pb2.CancelJobRequest.SerializeToString,
                response_deserializer=workflows_dot_v1_dot_job__pb2.CancelJobResponse.FromString,
                _registered_method=True)
        self.VisualizeJob = channel.unary_unary(
                '/workflows.v1.JobService/VisualizeJob',
                request_serializer=workflows_dot_v1_dot_job__pb2.VisualizeJobRequest.SerializeToString,
                response_deserializer=workflows_dot_v1_dot_diagram__pb2.Diagram.FromString,
                _registered_method=True)
        self.ListJobs = channel.unary_unary(
                '/workflows.v1.JobService/ListJobs',
                request_serializer=workflows_dot_v1_dot_job__pb2.ListJobsRequest.SerializeToString,
                response_deserializer=workflows_dot_v1_dot_job__pb2.ListJobsResponse.FromString,
                _registered_method=True)


class JobServiceServicer(object):
    """A service for interacting with jobs.
    """

    def SubmitJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetryJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VisualizeJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubmitJob': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitJob,
                    request_deserializer=workflows_dot_v1_dot_job__pb2.SubmitJobRequest.FromString,
                    response_serializer=workflows_dot_v1_dot_core__pb2.Job.SerializeToString,
            ),
            'GetJob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJob,
                    request_deserializer=workflows_dot_v1_dot_job__pb2.GetJobRequest.FromString,
                    response_serializer=workflows_dot_v1_dot_core__pb2.Job.SerializeToString,
            ),
            'RetryJob': grpc.unary_unary_rpc_method_handler(
                    servicer.RetryJob,
                    request_deserializer=workflows_dot_v1_dot_job__pb2.RetryJobRequest.FromString,
                    response_serializer=workflows_dot_v1_dot_job__pb2.RetryJobResponse.SerializeToString,
            ),
            'CancelJob': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelJob,
                    request_deserializer=workflows_dot_v1_dot_job__pb2.CancelJobRequest.FromString,
                    response_serializer=workflows_dot_v1_dot_job__pb2.CancelJobResponse.SerializeToString,
            ),
            'VisualizeJob': grpc.unary_unary_rpc_method_handler(
                    servicer.VisualizeJob,
                    request_deserializer=workflows_dot_v1_dot_job__pb2.VisualizeJobRequest.FromString,
                    response_serializer=workflows_dot_v1_dot_diagram__pb2.Diagram.SerializeToString,
            ),
            'ListJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListJobs,
                    request_deserializer=workflows_dot_v1_dot_job__pb2.ListJobsRequest.FromString,
                    response_serializer=workflows_dot_v1_dot_job__pb2.ListJobsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'workflows.v1.JobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('workflows.v1.JobService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class JobService(object):
    """A service for interacting with jobs.
    """

    @staticmethod
    def SubmitJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workflows.v1.JobService/SubmitJob',
            workflows_dot_v1_dot_job__pb2.SubmitJobRequest.SerializeToString,
            workflows_dot_v1_dot_core__pb2.Job.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workflows.v1.JobService/GetJob',
            workflows_dot_v1_dot_job__pb2.GetJobRequest.SerializeToString,
            workflows_dot_v1_dot_core__pb2.Job.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RetryJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workflows.v1.JobService/RetryJob',
            workflows_dot_v1_dot_job__pb2.RetryJobRequest.SerializeToString,
            workflows_dot_v1_dot_job__pb2.RetryJobResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workflows.v1.JobService/CancelJob',
            workflows_dot_v1_dot_job__pb2.CancelJobRequest.SerializeToString,
            workflows_dot_v1_dot_job__pb2.CancelJobResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VisualizeJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workflows.v1.JobService/VisualizeJob',
            workflows_dot_v1_dot_job__pb2.VisualizeJobRequest.SerializeToString,
            workflows_dot_v1_dot_diagram__pb2.Diagram.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/workflows.v1.JobService/ListJobs',
            workflows_dot_v1_dot_job__pb2.ListJobsRequest.SerializeToString,
            workflows_dot_v1_dot_job__pb2.ListJobsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
